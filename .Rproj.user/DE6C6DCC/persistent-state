build-last-errors="[]"
build-last-errors-base-dir="~/Desktop/CopulaCDO/code/Thibault/mdmd/"
build-last-outputs="[{\"output\":\"==> R CMD INSTALL --preclean --no-multiarch --with-keep.source mdmd\\n\\n\",\"type\":0},{\"output\":\"* installing to library ‘/usr/local/lib/R/site-library’\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"g++  -I/usr/share/R/include -DNDEBUG  -I\\\"/usr/local/lib/R/site-library/Rcpp/include\\\" -I\\\"/usr/local/lib/R/site-library/RcppEigen/include\\\"    -fpic  -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -g  -c RcppExports.cpp -o RcppExports.o\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"* installing *source* package ‘mdmd’ ...\\n\",\"type\":1},{\"output\":\"** libs\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"g++  -I/usr/share/R/include -DNDEBUG  -I\\\"/usr/local/lib/R/site-library/Rcpp/include\\\" -I\\\"/usr/local/lib/R/site-library/RcppEigen/include\\\"    -fpic  -g -O2 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -g  -c dfcop.cpp -o dfcop.o\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"g++ -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o mdmd.so RcppExports.o dfcop.o -L/usr/lib/R/lib -lR\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"installing to /usr/local/lib/R/site-library/mdmd/libs\\n\",\"type\":1},{\"output\":\"** R\\n\",\"type\":1},{\"output\":\"** preparing package for lazy loading\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"** help\\n\",\"type\":1},{\"output\":\"*** installing help indices\\n\",\"type\":1},{\"output\":\"** building package indices\\n\",\"type\":1},{\"output\":\"** testing if installed package can be loaded\\n\",\"type\":1},{\"output\":\"\",\"type\":1},{\"output\":\"* DONE (mdmd)\\n\",\"type\":1},{\"output\":\"\",\"type\":1}]"
compile_pdf_state="{\"errors\":[],\"output\":\"\",\"running\":false,\"tab_visible\":false,\"target_file\":\"\"}"
console_procs="[]"
files.monitored-path=""
find-in-files-state="{\"handle\":\"\",\"input\":\"\",\"path\":\"\",\"regex\":false,\"results\":{\"file\":[],\"line\":[],\"lineValue\":[],\"matchOff\":[],\"matchOn\":[]},\"running\":false}"
imageDirtyState="1"
saveActionState="-1"
