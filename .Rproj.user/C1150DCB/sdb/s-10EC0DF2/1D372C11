{
    "collab_server" : "",
    "contents" : "# Sample size, dimension, correlation parameter\nn <- 1e3\nd <- 1e2\nrho <- 0.7\n\n# Negative log-likelihood as a function of correlation, \n# marginal probabilities and data\nnll <- function(x, prob, data) {\n  model <- dfcop_dist(prob, \"gaussian\", parameters = x)\n  -sum(log(ddfcop(data, model)))\n}\n\n# The model\nprob <- runif(d)\ndfcop <- dfcop_dist(prob, \"gaussian\", parameters = 0.7)\n\n# Data and estimated marginal probabilities\nX <- rdfcop(n, dfcop)\nprob_hat <- apply(X, 2, mean)\n\n# Log-likelihood for a range of parameters assuming known/unknown margins\nparameters <- seq(0, 0.9, 1e-2)\nllknown <- -sapply(parameters, function(par) nll(par, prob, X))\nllunkown <- -sapply(parameters, function(par) nll(par, prob_hat, X))\n\n# MLE assuming known/unknown margins\nMLEknown <- optim(0.5, function(par) nll(par, prob, X), \n             lower = 0, upper = 0.999, method = \"Brent\")\nMLEunknown <- optim(0.5, function(par) nll(par, prob_hat, X), \n                  lower = 0, upper = 0.999, method = \"Brent\")\n\nplot(parameters, llknown, type = \"l\", lty = 2, \n     xlab = \"Correlation\", ylab = \"LL\")\nlines(parameters, llunkown, lty = 3)\nabline(v = MLEknown$par, col = \"red\", lty = 2)\nabline(v = MLEunknown$par, col = \"red\", lty = 3)\nabline(v = rho, col = \"green\")\nlegend(\"topleft\", legend = c(\"LL w. Known Margins\",\n                             \"LL w. Unknown Margins\",\n                             \"MLE w. Known Margins\",\n                             \"MLE w. Unknown Margins\",\n                             \"True Correlation\"),\n       col = c(1,1,2,2,3), lty = c(2,3,2,3,1),\n       cex = 0.5)\n\n\n# Misspecified log-likelihoods\nnllclay <- function(x, prob, data) {\n  model <- dfcop_dist(prob, \"clayton\", parameters = x)\n  -sum(log(ddfcop(data, model)))\n}\nnllt <- function(x, prob, data) {\n  model <- dfcop_dist(prob, \"t\", parameters = x)\n  -sum(log(ddfcop(data, model)))\n}\n\n# Same in the mis-specified case\nMLEclay <- optim(1, function(par) nllclay(par, prob_hat, X), \n                 lower = 1e-2, upper = 3, method = \"Brent\")\nMLEt <- optim(c(0.5, 5), function(par) nllt(par, prob_hat, X), \n              lower = c(0, 2+1e-2), upper = c(0.9, 50), method = \"L-BFGS-B\")\n\nBICs <- c(2*MLEunknown$value+log(n), \n          2*MLEclay$value + log(n), \n          2*MLEt$value+2*log(n))\nwhich.min(BICs)",
    "created" : 1501091560527.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "4246584897",
    "id" : "1D372C11",
    "lastKnownWriteTime" : 6,
    "last_content_update" : 1501101370767,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}